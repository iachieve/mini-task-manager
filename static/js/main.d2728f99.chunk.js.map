{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/Header.js","components/TaskForm.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","useState","title","id","tasks","setTasks","editItem","setEditItem","Provider","value","addTask","uuidv4","removeTask","newList","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","key","Header","TaskForm","setTitle","useEffect","onSubmit","e","preventDefault","type","onChange","target","placeholder","required","App","ReactDOM","render","document","getElementById"],"mappings":"2NAEaA,EAAkBC,0BAuChBC,EArCiB,SAAAC,GAAU,IAAD,EACbC,mBAAS,CACjC,CAAEC,MAAO,gBAAiBC,GAAI,GAC9B,CAAED,MAAO,eAAgBC,GAAI,GAC7B,CAAED,MAAO,kBAAmBC,GAAI,KAJK,mBAChCC,EADgC,KACzBC,EADyB,OAORJ,mBAAS,MAPD,mBAOhCK,EAPgC,KAOvBC,EAPuB,KA+BvC,OAAQ,kBAACV,EAAgBW,SAAjB,CACNC,MAAO,CAAEL,QAAOM,QAvBF,SAACR,GACfG,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEF,QAAOC,GAAIQ,mBAsBRC,WApBR,SAACT,GAClB,IAAMU,EAAUT,EAAMU,QAAO,SAAAC,GAAI,OAAIA,EAAKZ,KAAOA,KACjDE,EAASQ,IAkB4BG,UAfrB,WAChBX,EAAS,KAcuCY,SANjC,SAAAd,GACf,IAAMe,EAAOd,EAAMe,MAAK,SAAAJ,GAAI,OAAIA,EAAKZ,KAAOA,KAC5CI,EAAYW,IAI8CE,SAX3C,SAAClB,EAAOC,GACvB,IAAMkB,EAAWjB,EAAMkB,KAAI,SAAAP,GAAI,OAAKA,EAAKZ,KAAOA,EAAK,CAACD,QAAMC,MAAKY,KACjEV,EAASgB,GACTd,EAAY,OAQwDD,aACnEN,EAAMuB,WCZIC,MAtBf,YAAyB,IAATT,EAAQ,EAARA,KAAQ,EACWU,qBAAW5B,GAApCe,EADc,EACdA,WAAYK,EADE,EACFA,SAEpB,OACE,wBAAIS,UAAU,aACZ,8BAAOX,EAAKb,OACZ,6BACE,4BACEyB,QAAS,kBAAMf,EAAWG,EAAKZ,KAC/BuB,UAAU,uBACV,uBAAGA,UAAU,sBAEf,4BACEC,QAAS,kBAAMV,EAASF,EAAKZ,KAC7BuB,UAAU,qBACV,uBAAGA,UAAU,mBCERE,MAhBf,WAAqB,IACZxB,EAASqB,qBAAW5B,GAApBO,MACP,OACE,6BACGA,EAAMyB,OAAU,wBAAIH,UAAU,QAC5BtB,EAAMkB,KAAI,SAAAJ,GACT,OAAO,kBAAC,EAAD,CAAMY,IAAKZ,EAAKf,GAAIY,KAAMG,QAGnC,yBAAKQ,UAAU,YAAf,cCHOK,MARf,WACE,OACE,yBAAKL,UAAU,UACX,8CCiDOM,MAlDf,WAAqB,IAAD,EACiCP,qBAAW5B,GAAtDa,EADU,EACVA,QAASM,EADC,EACDA,UAAWV,EADV,EACUA,SAAUc,EADpB,EACoBA,SADpB,EAEQnB,mBAAS,IAFjB,mBAEXC,EAFW,KAEJ+B,EAFI,KA0BlB,OARAC,qBAAU,WAEND,EADe,OAAb3B,EACOA,EAASJ,MAET,MAEV,CAACI,IAGF,0BAAM6B,SAnBa,SAAAC,GACnBA,EAAEC,iBACe,OAAb/B,GACFI,EAAQR,GACR+B,EAAS,KAETb,EAASlB,EAAOI,EAASH,KAaGuB,UAAU,QAEtC,2BAAOY,KAAK,OACVC,SA1Be,SAAAH,GACnBH,EAASG,EAAEI,OAAO/B,QA0BdA,MAAOP,EACPwB,UAAU,aACVe,YAAY,WACZC,UAAQ,IAEV,yBAAKhB,UAAU,WACb,4BAAQY,KAAK,SAASZ,UAAU,oBAC7BpB,EAAW,YAAa,YAE3B,4BACEqB,QAAS,kBAAMX,KACfU,UAAU,iBAFZ,YCtBOiB,MAhBf,WACE,OACE,kBAAC,EAAD,KACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,eACf,kBAAC,EAAD,MACE,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,WCVZkB,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.d2728f99.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = props => {\n  const [tasks, setTasks] = useState([\n    { title: 'read the book', id: 1 },\n    { title: 'wash the car', id: 2 },\n    { title: 'write some code', id: 3 },\n  ]);\n\n  const [editItem,setEditItem] = useState(null);\n\n  const addTask = (title) => {\n    setTasks([...tasks, { title, id: uuidv4() }])\n  };\n  const removeTask = (id) => {\n    const newList = tasks.filter(task => task.id !== id);\n    setTasks(newList);\n  };\n\n  const clearList = () => {\n    setTasks([]);\n  };\n\n  const editTask = (title, id) =>{\n    const newTasks = tasks.map(task => (task.id === id ? {title,id}: task));\n    setTasks(newTasks);\n    setEditItem(null);\n  }\n  const findItem = id =>{\n    const item = tasks.find(task => task.id === id);\n    setEditItem(item);\n  }\n\n  return (<TaskListContext.Provider \n    value={{ tasks, addTask, removeTask, clearList, findItem, editTask, editItem }}>\n    {props.children}\n  </TaskListContext.Provider>)\n};\n\nexport default TaskListContextProvider;","import React, { useContext } from 'react'\nimport { TaskListContext } from '../context/TaskListContext';\n\nfunction Task({ task }) {\n  const { removeTask, findItem } = useContext(TaskListContext);\n\n  return (\n    <li className='list-item'>\n      <span>{task.title}</span>\n      <div>\n        <button\n          onClick={() => removeTask(task.id)}\n          className='btn-delete task-btn'>\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>\n        <button\n          onClick={() => findItem(task.id)}\n          className='btn-edit task-btn'>\n          <i className=\"fas fa-pen\"></i>\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default Task\n","import React,{useContext} from 'react';\nimport Task from './Task';\nimport {TaskListContext}  from '../context/TaskListContext';\n\nfunction TaskList() {\n  const {tasks} = useContext(TaskListContext);\n  return (\n    <div>\n      {tasks.length ? (<ul className='list'>\n        {tasks.map(item => {\n          return <Task key={item.id} task={item} />\n        })}\n      </ul>):(\n        <div className=\"no-tasks\">No Tasks</div>\n      )}\n      \n    </div>\n  )\n}\n\nexport default TaskList\n","import React from 'react'\n\nfunction Header() {\n  return (\n    <div className='header'>\n        <h1>Task Manager</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useContext, useState, useEffect } from 'react'\nimport { TaskListContext } from '../context/TaskListContext';\n\n\nfunction TaskForm() {\n  const { addTask, clearList, editItem, editTask } = useContext(TaskListContext);\n  const [title, setTitle] = useState('');\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (editItem === null) {\n      addTask(title);\n      setTitle('');\n    } else {\n      editTask(title, editItem.id);\n    }\n  }\n\n  useEffect(() => {\n    if (editItem !== null) {\n      setTitle(editItem.title);\n    } else {\n      setTitle('');\n    }\n  }, [editItem]);\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n\n      <input type=\"text\"\n        onChange={handleChange}\n        value={title}\n        className=\"task-input\"\n        placeholder=\"Add Task\"\n        required\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"btn add-task-btn\">\n          {editItem ? 'edit Task': 'add item'}\n        </button>\n        <button\n          onClick={() => clearList()}\n          className=\"btn clear-btn\">\n          clear\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default TaskForm\n","import React from 'react'\nimport '../App.css';\nimport TaskList from './TaskList';\nimport Header from './Header';\nimport TaskListContextProvider from '../context/TaskListContext';\nimport TaskForm from './TaskForm';\nfunction App() {\n  return (\n    <TaskListContextProvider>\n      <div className='container'>\n        <div className='app-wrapper'>\n        <Header/>\n          <div className='main'>\n            <TaskForm />\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    </TaskListContextProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}